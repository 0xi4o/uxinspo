---
import { Image } from '@astrojs/image/components'
import '@/styles/content-card.css'

type Props = {
	alt: string
	aspectRatio: number
	group?: boolean
	src: string | string[]
	thumbnail?: string
	type?: string
	width: number
}
const {
	alt,
	aspectRatio,
	group = false,
	src,
	thumbnail,
	type = 'image/png',
	width,
} = Astro.props
---

<figure class='flex flex-col'>
	<div>
		{
			group ? (
				<div class='flex h-auto w-full flex-col gap-8' id='lg'>
					{src.map((img) => (
						<a
							class='image relative flex h-auto w-full border-2 border-white object-cover shadow-[5px_5px_0_0_rgba(250,238,231,0.9)] transition-all duration-200 hover:shadow-none'
							href={img}
						>
							<Image
								alt={alt}
								aspectRatio={aspectRatio}
								src={img}
								width={width}
							/>
						</a>
					))}
				</div>
			) : (
				<div
					class='image relative flex h-auto w-full border-2 border-white object-cover shadow-[5px_5px_0_0_rgba(250,238,231,0.9)] transition-all duration-200 hover:shadow-none'
					id='lg'
				>
					{type === 'video/webm' ? (
						<a
							data-video={`{"source": [{"src": "${src}", "type": "video/webm"}]}`}
							data-poster={thumbnail}
						>
							<Image
								alt={alt}
								aspectRatio={aspectRatio}
								src={thumbnail}
								width={width}
							/>
						</a>
					) : (
						<a href={src}>
							<Image
								alt={alt}
								aspectRatio={aspectRatio}
								src={src}
								width={width}
							/>
						</a>
					)}
				</div>
			)
		}
	</div>
</figure>

<!-- <ExternalScripts /> -->
<script>
	import lightgallery from 'lightgallery'
	import lgThumbnail from 'lightgallery/plugins/thumbnail'
	import lgVideo from 'lightgallery/plugins/video'
	import lgZoom from 'lightgallery/plugins/zoom'

	const galleryContainer = document.getElementById('lg')

	// @ts-ignore
	lightgallery(galleryContainer, {
		counter: false,
		download: false,
		plugins: [lgThumbnail, lgVideo, lgZoom],
		thumbnail: true,
	})
</script>

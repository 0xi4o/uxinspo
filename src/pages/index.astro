---
import { getCollection } from 'astro:content'
import GridLayout from '@/layouts/GridLayout.astro'
import Button from '@/components/shared/Button.astro'

import categories from '@/data/categories'
import ContentCard from '../components/ContentCard.astro'

const designs = await getCollection('ui', ({ data }) => !data.draft)
const sortedDesigns = designs.sort(
	(a, b) =>
		new Date(b.data.date_published).valueOf() -
		new Date(a.data.date_published).valueOf()
)
---

<GridLayout>
	<div class='flex flex-wrap items-center gap-6'>
		{
			categories
				.filter((category) => !category.hide)
				.map((category) => {
					const designsInCategory = designs.filter(
						(design) => design.data.category === category.type
					).length
					return (
						<a href={`/${category.type}`}>
							<Button className='filter'>
								{category.title}
								<span class='px-3 bg-text/10 inline-flex items-center justify-center rounded-lg text-sm'>
									{designsInCategory}
								</span>
							</Button>
						</a>
					)
				})
		}
	</div>
	<div
		class='w-full grid grid-cols-1 gap-8 py-12 md:grid-cols-2 lg:grid-cols-3'
		id='lg'
	>
		{
			sortedDesigns.map((design) => (
				<ContentCard
					alt={`${design.data.category} - ${design.data.product}`}
					aspectRatio={1.7777}
					src={
						design.data.thumbnail ||
						(Array.isArray(design.data.image)
							? design.data.image[0]
							: design.data.image)
					}
					width={480}
					title={design.data.product}
					tag={design.data.category}
				/>
			))
		}
	</div>
</GridLayout>
